summary(b4)
visreg(b4, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library('itsadug')
gamtabs(b4, caption='Summary of First Replicate: Comparison Between Individual Visual Components')
df <- read.csv("df_color_exp_unal1.csv")
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b5 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = gaussian())
summary(b5)
visreg(b5, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library('itsadug')
gamtabs(b5, caption='Summary of Second Replicate: Comparison Between Individual Visual Components')
df <- read.csv("df_color_exp_unal2.csv")
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b6 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = gaussian())
summary(b6)
visreg(b6, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library('itsadug')
gamtabs(b6, caption='Summary of Third Replicate: Comparison Between Individual Visual Components')
library(stargazer)
stargazer(b1, b2, b3, b4, b5, b6)
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
b <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = binomial(link="logit"))
library(stargazer)
stargazer(b1, b2, b3, b4, b5, b6, float.env = "sidewaystable")
library(stargazer)
stargazer(b1, b2, b3)
library(stargazer)
stargazer(b4, b5, b6)
df <- read.csv("df_color_exp_unal0.csv")
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b4 <- gam(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link="logit"))
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*100))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*10000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(gam)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
# Interleaved histograms
ggplot(df, aes(x=ssim_exp_scale, fill=comparison_type)) +
geom_histogram(binwidth=.5, position="dodge")
library(ggplot2)
# Interleaved histograms
ggplot(df, aes(x=ssim_exp_scale, fill=comparison_type)) +
geom_histogram(binwidth=.5, position="dodge")
# Density plots with semi-transparent fill
ggplot(df, aes(x=ssim_exp_scale, fill=comparison_type)) + geom_density(alpha=.3)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
b1 <- gam(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar(link = "logit", eps=.Machine$double.eps*1000))
summary(b1)
visreg(b1, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(brms)
install.packages("brms")
install.packages("brms")
install.packages("brms")
install.packages("brms")
install.packages("brms")
install.packages("brms")
library(brms)
library(brms)
library(brms)
install.packages("brms", type = "binary")
library(brms)
library(brms)
library(brms)
library(brms)
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
library('brms)
library('brms')
remove.packages("brms")
library('brms')
install.packages("brms", type = "binary")
library('brms')
library('brms')
install.packages("brms", type = "binary", dependencies = TRUE)
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
install.packages("brms", type = "binary", dependencies = TRUE)
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
library('brms')
install.packages("igraph")
install.packages("igraph", type = "binary")
library('brms')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a1 <- brm(ssim_exp_scale ~ s(stage) + comparison_type, data = df, family = "zero_one_inflated_beta")
library('brms')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a1 <- brm(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = "zero_one_inflated_beta")
library('brms')
library('lmerTest')
install.packages('lmerTest', type = 'binary')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a1 <- brm(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = "zero_one_inflated_beta")
summary(a1)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a1 <- brm(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = "zero_one_inflated_beta")
summary(a1)
msms <- marginal_smooths(a1)
msms <- conditional_smooths(a1)
msms <- conditional_smooths(a1)
msms <- conditional_smooths(a1)
plot(msms)
library(sjstats)
install.packages("sjstats", type = "binary")
library(sjstats)
r2(a1)
library(sjstats)
performance::r2(a1)
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar())
summary(a2)
visreg(b2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar())
summary(a2)
visreg(b2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar())
summary(a2)
visreg(a2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = gaussian())
summary(a2)
visreg(a2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = betar())
summary(a2)
visreg(a2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
library(mgcv)
library(visreg)
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a2 <- gam(ssim_exp ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = gaussian())
summary(a2)
visreg(a2, xvar = "stage", by = "comparison_type", data = df, method = "REML")
sm1<-sim(a2,1000)
install.packages(c("MCMCglmm", "arm"), dependencies=TRUE)
library(MCMCglmm)
library(arm)
sm1<-sim(a2,1000)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ comparison_type, data = df)
summary(a0)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ comparison_type, data = df)
summary(a0)
plot(a0)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ comparison_type, data = df)
summary(a0)
abine(a0)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ comparison_type, data = df)
summary(a0)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ factor(comparison_type), data = df)
summary(a0)
t.test(df$ssim_exp_scale[df$comparison_type == 'functions'], df$ssim_exp_scale[df$comparison_type == 'complete'] )
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0 <- lm(ssim_exp_scale ~ comparison_type + factor(link1_change), data = df)
summary(a0)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_a <- lm(ssim_exp_scale ~ comparison_type + factor(link1_change), data = df)
summary(a0_a)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_b <- lm(ssim_exp_scale ~ comparison_type + (1 | link1_change), data = df)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_b <- lmer(ssim_exp_scale ~ comparison_type + (1 | link1_change), data = df)
summary(a0_b)
ggplot(df, aes(x = comparison_type, ssim_exp_scale)) + facet_wrap(~link1_change)
library(ggplot2)
ggplot(df, aes(x = comparison_type, ssim_exp_scale)) + facet_wrap(~link1_change)
library(ggplot2)
ggplot(df, aes(x = comparison_type, ssim_exp_scale)) + facet_wrap(~link1_change) + geom_jitter(width = 0.1, height = 0.1)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_b <- lmer(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df)
summary(a0_b)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_c <- lmer(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df)
summary(a0_c)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_d <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, prior = NULL)
summary(a0_d)
get_prior(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_e <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, prior = set_prior( student_t(3, 0, 2.5)), class = "Intercept")
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_e <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, prior = set_prior(" student_t(3, 0, 2.5)"), class = "Intercept")
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_e <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, prior = set_prior(" student_t(3, 0, 2.5)", class = "Intercept")
summary(a0_e)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_e <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, prior = set_prior(" student_t(3, 0, 2.5)", class = "Intercept"))
summary(a0_e)
library('lme4')
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a0_e <- brm(ssim_exp_scale ~ comparison_type + (comparison_type | link1_change), data = df, iter = 1000, family = zero_one_inflated_beta())
summary(a0_e)
library('brms')
library('lmerTest')
df <- read.csv("final_unal0_functions_complete.csv")
# fit a smooth which varies by comparison_type
df$comparison_type <- factor(df$comparison_type)
# separate smooth functions for each level of the factor
# each has its own smoothness parameter
# centred ( no group means ) so include factor as a fixed effect
a1 <- brm(ssim_exp_scale ~ s(stage, k = 4, fx = TRUE, by = comparison_type) + comparison_type, data = df, family = zero_one_inflated_beta(), iter = 1000)
summary(a1)
msms <- conditional_smooths(a0_e)
msms <- conditional_effects(a1)
plot(msms)
